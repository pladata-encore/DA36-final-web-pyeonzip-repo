# Generated by Django 5.1.6 on 2025-02-11 05:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0003_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('reviewId', models.AutoField(primary_key=True, serialize=False)),
                ('tasteContent', models.TextField()),
                ('priceContent', models.TextField()),
                ('convenienceContent', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('reviewImageUrl', models.URLField()),
                ('authorId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='User_reviews', to=settings.AUTH_USER_MODEL)),
                ('productId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Product_reviews', to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewRecommender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommended_at', models.DateTimeField(auto_now_add=True)),
                ('recommenderId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reviewId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='review.review')),
            ],
            options={
                'db_table': 'review_recommender',
            },
        ),
        migrations.AddField(
            model_name='review',
            name='recommender',
            field=models.ManyToManyField(blank=True, null=True, related_name='Review_recommender', through='review.ReviewRecommender', to=settings.AUTH_USER_MODEL),
        ),
    ]
