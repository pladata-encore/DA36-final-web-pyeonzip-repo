# Generated by Django 5.1.6 on 2025-02-11 05:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0002_remove_product_likes_delete_productcategory_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('productCategoryId', models.AutoField(primary_key=True, serialize=False)),
                ('productCategoryName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productId', models.AutoField(primary_key=True, serialize=False)),
                ('productName', models.CharField(max_length=100)),
                ('convenientStoreName', models.IntegerField()),
                ('productPrice', models.IntegerField()),
                ('productImageUrl', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('productCategoryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductLikes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_at', models.DateTimeField(auto_now_add=True)),
                ('productId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.product')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Product_likes',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='likes',
            field=models.ManyToManyField(blank=True, null=True, related_name='Product_likes', through='product.ProductLikes', to=settings.AUTH_USER_MODEL),
        ),
    ]
